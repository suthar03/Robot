# -*- coding: utf-8 -*-
"""BTP Graph.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12sUKTXQ7FNkj71iMb4wsYzfWOEcf6uH5
"""

import math
def delta(l0=0.10,l1=0.40,l2=0.40,l3=0.40,density=7750,young=1.9*10e11,width=0.03,thick=0.03,force=1000,theta1=20,theta2=20,theta3=20):
  x=l2*math.cos(math.radians(theta2))+l3*math.cos(math.radians(theta3))
  x_f=x*math.cos(math.radians(theta1))
  y=l1+l2*math.sin(math.radians(theta2))+l3*math.sin(math.radians(theta3))
  y_f=l0+y
  z=x*math.sin(math.radians(theta1))
  l_3=l3*math.cos(math.radians(theta3))
  l_2=l2*math.cos(math.radians(theta2))
  deltaY3=(4*force*l_3*l_3/(young*density*width*thick*(thick*thick+width*width)))
  deltaY2=(5/4)*(force*l_2*(3*l_3+2*l_2)/(young*density*width*thick*(thick*thick+width*width)))
  deltaX3=deltaY3*(force*l_3*(3*l_3+2*l_2))/(2*young*density*4*width*thick*l_3*(thick*thick+width*width)/12)
  deltaX2=deltaY2*(force*l_2*l_2)/(2*young*density*4*width*thick*l_2*(thick*thick+width*width)/12)
  deltaX=deltaX3+deltaX2
  deltaY=deltaY3+deltaY2
  x2=x_f- deltaX
  y2=y_f- deltaY
  return x_f,y_f,z,x2,y2

import matplotlib.pyplot as plt
X=[]
Y=[]
Z=[]
X2=[]
Y2=[]
force=[]
for i in range(1,150):
  x,y,z,x2,y2=delta(0.1,0.4,0.4,0.4,7750,1.9*10e11,0.03,0.03,i,20,20,20)
  force.append(i)
  X.append(x)
  Y.append(y)
  Z.append(z)
  X2.append(x2)
  Y2.append(y2)

plt.plot(force, X)
 
plt.xlabel('force at the end point')
plt.ylabel('X-position')
 
plt.title('                 X-position v/s force at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Y)
 
plt.xlabel('force at the end point')
plt.ylabel('Y-position')
 
plt.title('                  Y-position v/s force at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Z)
 
plt.xlabel('force at the end point')
plt.ylabel('Z-position')
 
plt.title('                        Z-position v/s force at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, X2)
 
plt.xlabel('force at the end point')
plt.ylabel('X-position')
 
plt.title('-                  X-position v/s force at the end point in flexible link')
 
plt.show()
print()

plt.plot(force, Y2)
 
plt.xlabel('force at the end point')
plt.ylabel('Y-position')
 
plt.title('                     Y-position v/s force at the end point in flexible link')
 
plt.show()
print()

import matplotlib.pyplot as plt
X=[]
Y=[]
Z=[]
X2=[]
Y2=[]
force=[]
for i in range(1,100):
  x,y,z,x2,y2=delta(0.1,0.4,0.4,0.4,7750,1.9*10e11,0.001*i,0.03,100,20,20,20)
  force.append(i)
  X.append(x)
  Y.append(y)
  Z.append(z)
  X2.append(x2)
  Y2.append(y2)

plt.plot(force, X)
 
plt.xlabel('width at the end point')
plt.ylabel('X-position')
 
plt.title('                 X-position v/s width at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Y)
 
plt.xlabel('force at the end point')
plt.ylabel('Y-position')
 
plt.title('                  Y-position v/s width at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Z)
 
plt.xlabel('force at the end point')
plt.ylabel('Z-position')
 
plt.title('                        Z-position v/s width at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, X2)
 
plt.xlabel('force at the end point')
plt.ylabel('X-position')
 
plt.title('-                  X-position v/s width at the end point in flexible link')
 
plt.show()
print()

plt.plot(force, Y2)
 
plt.xlabel('force at the end point')
plt.ylabel('Y-position')
 
plt.title('                    -Y-position v/s width at the end point in flexible link')
 
plt.show()
print()

plt.plot(force, X2)
 
plt.xlabel('force at the end point')
plt.ylabel('X-position')
 
plt.title('-                  X-position v/s width at the end point in flexible link')
 
plt.show()

import matplotlib.pyplot as plt
X=[]
Y=[]
Z=[]
X2=[]
Y2=[]
force=[]
for i in range(1,28):
  x,y,z,x2,y2=delta(0.1,0.4,0.4,0.4,7750,i*10e10,0.003,0.03,100,20,20,20)
  force.append(i)
  X.append(x)
  Y.append(y)
  Z.append(z)
  X2.append(x2)
  Y2.append(y2)

plt.plot(force, X)
 
plt.xlabel('young modulus at the end point')
plt.ylabel('X-position')
 
plt.title('                 X-position v/s young modulus at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Y)
 
plt.xlabel('young modulus at the end point')
plt.ylabel('Y-position')
 
plt.title('                  Y-position v/s young modulus at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Z)
 
plt.xlabel('young modulus at the end point')
plt.ylabel('Z-position')
 
plt.title('                        Z-position v/s young modulus at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, X2)
 
plt.xlabel('young modulus at the end point')
plt.ylabel('X-position')
 
plt.title('-                  X-position v/s young modulus at the end point in flexible link')
 
plt.show()
print()

plt.plot(force, Y2)
 
plt.xlabel('young modulus at the end point')
plt.ylabel('Y-position')
 
plt.title('                    -Y-position v/s young modulus at the end point in flexible link')
 
plt.show()
print()

import matplotlib.pyplot as plt
X=[]
Y=[]
Z=[]
X2=[]
Y2=[]
force=[]
for i in range(2000,8000):
  x,y,z,x2,y2=delta(0.1,0.4,0.4,0.4,i,19*10e10,0.003,0.03,100,20,20,20)
  force.append(i)
  X.append(x)
  Y.append(y)
  Z.append(z)
  X2.append(x2)
  Y2.append(y2)

plt.plot(force, X)
 
plt.xlabel('density at the end point')
plt.ylabel('X-position')
 
plt.title('                 X-position v/s density at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Y)
 
plt.xlabel('density at the end point')
plt.ylabel('Y-position')
 
plt.title('                  Y-position v/s density at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Z)
 
plt.xlabel('density at the end point')
plt.ylabel('Z-position')
 
plt.title('                        Z-position v/s density at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, X2)
 
plt.xlabel('density at the end point')
plt.ylabel('X-position')
 
plt.title('-                  X-position v/s density at the end point in flexible link')
 
plt.show()
print()

plt.plot(force, Y2)
 
plt.xlabel('density at the end point')
plt.ylabel('Y-position')
 
plt.title('                    -Y-position v/s density at the end point in flexible link')
 
plt.show()
print()

import matplotlib.pyplot as plt
X=[]
Y=[]
Z=[]
X2=[]
Y2=[]
force=[]
for i in range(10,180):
  x,y,z,x2,y2=delta(0.1,0.4,0.4,0.4,7750,19*10e10,0.003,0.03,100,20,i,20)
  force.append(i)
  X.append(x)
  Y.append(y)
  Z.append(z)
  X2.append(x2)
  Y2.append(y2)

plt.plot(force, X)
 
plt.xlabel('theta2 at the end point')
plt.ylabel('X-position')
 
plt.title('                 X-position v/s theta2 at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Y)
 
plt.xlabel('theta2 at the end point')
plt.ylabel('Y-position')
 
plt.title('                  Y-position v/s theta2 at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, Z)
 
plt.xlabel('theta2 at the end point')
plt.ylabel('Z-position')
 
plt.title('                        Z-position v/s theta2 at the end point in rigid link')
 
plt.show()
print()
plt.plot(force, X2)
 
plt.xlabel('theta2 at the end point')
plt.ylabel('X-position')
 
plt.title('-                  X-position v/s theta2 at the end point in flexible link')
 
plt.show()
print()

plt.plot(force, Y2)
 
plt.xlabel('theta2 at the end point')
plt.ylabel('Y-position')
 
plt.title('                    -Y-position v/s theta2 at the end point in flexible link')
 
plt.show()
print()